## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/quickOrder
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'CREATE QUICK ORDER'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      customer_name:
        name: customer_name
        description: 'The customer name.'
        required: true
        example: 'Cristiano Ronaldo'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      phone_number:
        name: phone_number
        description: "The user's phone."
        required: true
        example: '+38087659800'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        custom: []
      product_id:
        name: product_id
        description: "The product's id."
        required: true
        example: '2'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        custom: []
      quantity:
        name: quantity
        description: 'The quantity.'
        required: true
        example: '5'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        custom: []
      delivery_address:
        name: delivery_address
        description: 'Delivery address.'
        required: true
        example: 'city London. st Bray ton beach 27'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      customer_name: 'Cristiano Ronaldo'
      phone_number: '+38087659800'
      product_id: '2'
      quantity: '5'
      delivery_address: 'city London. st Bray ton beach 27'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Quick order successfully added."
           }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/products
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'DISPLAY A LIST OF PRODUCTS WITH FILTER.'
      description: |-
        Two parameters are required in a query string:

        A pagination - numbers of products on one-page.

        A gender - male or female. Products for unisex add by default.

        Example:
        <p><b>http://70.34.242.75/api/products/?pagination=5&gender=female</b></p>

        Rest of parameters in query string are optional.

        This could be next parameters: <b>size</b>, <b>color</b>, <b>minPrice</b>,
        <b>maxPrice</b>, <b>sortOrderByPrice</b> (<b>asc </b>or <b>desc</b>), <b>nameOfProduct</b>.

        The query string is built by next rule:
        question mark, then key=value pairs divided by ampersand,
        ?key1=value1&key2=value2&key3=value3

        EXAMPLE:

        <p><b>http://70.34.242.75/api/products/?pagination=5&gender=female&</b></p>
        <p><b>size=M&minPrice=0&maxPrice=40000&ortOrderByPrice=asc&size=m&color=gray&nameOfProduct=Classic T-Shirts</b></p>
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
                  "meta": {
                      "colors": [ "red", "blue","green", "gray","black"],
                      "size": ["s","m","l","xl","xxl","xxxl"],
                      "minPriceOnStock": 1,
                      "maxPriceOnStock": 1111
                      },
                   "data": {
                         "listOfProduct": [
                               {
                       "slug": "T-Shirts"
                       "name": "Classic T-Shirts",
                       "price": 1111,
                       "new_price": 1111,
                        "color": {
                                "gray": "#E8E8E8"
                                },
                       "Images_to_product": "http://70.34.242.75/storage/T-F/Dqc85iSFeuHtkraOCkO2hzgntIgtYu2Z9zfUBW7K.png"
                         }
                       ],
                    "current_page": 1,
                    "last_page": 1,
                    "per_page": 5,
                    "total": 1,
                    "linksPrevious": null,
                    "linksNext": null
                    }
                }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/products/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 102
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 102
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, DELETE, OPTIONS'
          access-control-allow-headers: 'Content-Type, Authorization'
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '58'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/products
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
        required: true
        example: tozocictswgm
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Et consequatur et nihil in rem repudiandae voluptas optio.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      SKU:
        name: SKU
        description: 'Must be at least 1 character. Must not be greater than 35 characters.'
        required: true
        example: emlocwqogltz
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      price:
        name: price
        description: 'Must be at least 0.'
        required: true
        example: 8
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
      new_price:
        name: new_price
        description: 'Must be at least 0.'
        required: false
        example: 70
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
      thumbnail:
        name: thumbnail
        description: 'Must be an image.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      images:
        name: images
        description: 'Must be an image.'
        required: false
        example:
          - null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: tozocictswgm
      description: 'Et consequatur et nihil in rem repudiandae voluptas optio.'
      SKU: emlocwqogltz
      price: 8
      new_price: 70
    fileParameters:
      thumbnail: null
      images:
        - null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/products/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 102
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 102
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/favorite_products
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/favorite_products
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      favoriteID:
        name: favoriteID
        description: ''
        required: true
        example: impedit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      favoriteID: impedit
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/favorite_products/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the favorite product.'
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: qui
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/products/{product_id}/images'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      product_id:
        name: product_id
        description: 'The ID of the product.'
        required: true
        example: 102
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      product_id: 102
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      image:
        name: image
        description: 'Must be an image.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters: []
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/images/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the image.'
        required: true
        example: 57
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 57
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/images/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the image.'
        required: true
        example: 57
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 57
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
